<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.travel.entity.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="scenic_id" jdbcType="INTEGER" property="scenicId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="ticket_count" jdbcType="INTEGER" property="ticketCount" />
    <result column="explain" jdbcType="VARCHAR" property="explain" />
    <result column="ticket_price" jdbcType="DOUBLE" property="ticketPrice" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="bank" jdbcType="INTEGER" property="bank" />
  </resultMap>
  <resultMap id="OrderResultMap" type="com.travel.entity.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="scenic_id" jdbcType="INTEGER" property="scenicId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="ticket_count" jdbcType="INTEGER" property="ticketCount" />
    <result column="explain" jdbcType="VARCHAR" property="explain" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <association property="user" javaType="com.travel.entity.User">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
    </association>
    <association property="scenicSpot" javaType="com.travel.entity.ScenicSpot">
      <id column="id" property="id"/>
      <result column="scenic_introduction" property="scenicIntroduction"/>
      <result column="image" property="image"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, scenic_id, user_id, start_time, ticket_count, `explain`, ticket_price, total, create_time,
    state, uid,bank
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=VARCHAR}
  </select>


  <select id="selectByuid" parameterType="com.travel.entity.Orders" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from orders
  where uid = #{uid,jdbcType=VARCHAR}
</select>
  <select id="getBystate" parameterType="int" resultMap="OrderResultMap">
  SELECT
  o.*,u.name,
  s.scenic_introduction
  FROM
  orders o,
  scenic_spot s,
  `user` u
  WHERE
  o.user_id=u.id AND
  s.id=o.scenic_id AND
  o.state=#{state}
</select>

  <select id="orders" parameterType="int" resultMap="OrderResultMap">
    SELECT
    o.*,
    s.image,
    s.scenic_introduction
    FROM
    orders o,
    scenic_spot s
    WHERE
    s.id=o.scenic_id AND
    o.user_id=#{id}
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.travel.entity.Orders">
    insert into orders (id, scenic_id, user_id, 
      start_time, ticket_count, `explain`,
      ticket_price, total, create_time, 
      state, uid,bank)
    values (#{id,jdbcType=INTEGER}, #{scenicId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{ticketCount,jdbcType=INTEGER}, #{explain,jdbcType=VARCHAR}, 
      #{ticketPrice,jdbcType=DOUBLE}, #{total,jdbcType=DOUBLE}, #{createTime,jdbcType=DATE}, 
      #{state,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR},#{bank,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.travel.entity.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="scenicId != null">
        scenic_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="ticketCount != null">
        ticket_count,
      </if>
      <if test="explain != null">
        `explain`,
      </if>
      <if test="ticketPrice != null">
        ticket_price,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="bank != null">
       bank,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="scenicId != null">
        #{scenicId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketCount != null">
        #{ticketCount,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        #{explain,jdbcType=VARCHAR},
      </if>
      <if test="ticketPrice != null">
        #{ticketPrice,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
      #{bank,jdbcType=INTEGER},
    </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.travel.entity.Orders">
    update orders
    <set>
      <if test="scenicId != null">
        scenic_id = #{scenicId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketCount != null">
        ticket_count = #{ticketCount,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        `explain` = #{explain,jdbcType=VARCHAR},
      </if>
      <if test="ticketPrice != null">
        ticket_price = #{ticketPrice,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
       bank = #{bank,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.travel.entity.Orders">
    update orders
    set scenic_id = #{scenicId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      ticket_count = #{ticketCount,jdbcType=INTEGER},
      `explain` = #{explain,jdbcType=VARCHAR},
      ticket_price = #{ticketPrice,jdbcType=DOUBLE},
      total = #{total,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=DATE},
      state = #{state,jdbcType=INTEGER},
      uid = #{uid,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByuid" parameterType="com.travel.entity.Orders">
    update orders
    set
    ticket_count = #{ticketCount,jdbcType=INTEGER},
    `explain` = #{explain,jdbcType=VARCHAR},
    total = #{total,jdbcType=DOUBLE}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>

  <select id="getBydetail" parameterType="java.lang.Integer" resultMap="OrderResultMap">
    SELECT
u.name,
s.scenic_introduction,
s.image,
o.`explain`,
o.total
FROM
orders o,
scenic_spot s,
`user` u
WHERE
o.user_id=u.id AND
s.id=o.scenic_id AND
o.id=#{id}
 </select>

  <update id="updateState" parameterType="java.lang.Integer">
 update  orders SET  state=#{state} where id=#{id}
  </update>



</mapper>