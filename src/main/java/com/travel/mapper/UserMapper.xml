<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.travel.entity.User">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="password" jdbcType="INTEGER" property="password" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="e_mail" jdbcType="VARCHAR" property="eMail" />
        <result column="age" jdbcType="INTEGER" property="age" />
        <result column="sex" jdbcType="INTEGER" property="sex" />
        <result column="id_card" jdbcType="BIGINT" property="idCard" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="id_type" jdbcType="INTEGER" property="idType" />
        <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    </resultMap>
    <sql id="Base_Column_List">
    id, name, password, phone, e_mail, age, sex, id_card, remark, id_type,full_name
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.travel.entity.User">
    insert into user (id, name, password,
      phone, e_mail, age,
      sex, id_card, remark,
      id_type,full_name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=INTEGER},
      #{phone,jdbcType=VARCHAR}, #{eMail,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
      #{sex,jdbcType=INTEGER}, #{idCard,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR},
      #{idType,jdbcType=INTEGER},#{fullName,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.travel.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="eMail != null">
                e_mail,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="idType != null">
                id_type,
            </if>
            <if test="fullName != null">
                full_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="eMail != null">
                #{eMail,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="idType != null">
                #{idType,jdbcType=INTEGER},
            </if>
            <if test="fullName != null">
                #{ full_name,jdbcType=VARCHAR},

            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.travel.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="eMail != null">
                e_mail = #{eMail,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="idType != null">
                id_type = #{idType,jdbcType=INTEGER},
            </if>
            <if test="fullName != null">
               full_name= #{fullName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.travel.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      e_mail = #{eMail,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      id_card = #{idCard,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      id_type = #{idType,jdbcType=INTEGER},
       full_name=#{ full_name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="login" resultMap="BaseResultMap">
        SELECT * FROM USER  WHERE  NAME =#{name}
    </select>

    <select id="getUserList" resultMap="BaseResultMap">
        select * from user
    </select>

<select id="selectByCondition" resultMap="BaseResultMap" parameterType="string">
    select * from user
    <where>
        <if test="_parameter!=null and _parameter!=''">
            and full_name like concat('%',#{name},'%')
        </if>
    </where>
</select>

<delete id="batchDelId">
    delete from user where id in
    <foreach collection="list" item="id" open="(" separator="," close=")">
        #{id}
    </foreach>
</delete>

    <update id="changeById" parameterType="user">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="eMail != null">
                e_mail = #{eMail,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="idType != null">
                id_type = #{idType,jdbcType=INTEGER},
            </if>
            <if test="fullName != null">
                full_name= #{fullName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>